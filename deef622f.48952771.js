(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{147:function(e,n,a){"use strict";a.r(n),a.d(n,"frontMatter",(function(){return o})),a.d(n,"metadata",(function(){return c})),a.d(n,"toc",(function(){return p})),a.d(n,"default",(function(){return l}));var t=a(3),r=a(7),i=(a(0),a(163)),o={id:"python2",title:"Pandas \ub77c\uc774\ube0c\ub7ec\ub9ac",sidebar_label:"Pandas"},c={unversionedId:"kdt/python/python2",id:"kdt/python/python2",isDocsHomePage:!1,title:"Pandas \ub77c\uc774\ube0c\ub7ec\ub9ac",description:"\ud83d\udca1 \u300eKDT \ud504\ub85c\uadf8\ub798\uba38\uc2a4 \uc778\uacf5\uc9c0\ub2a5 \ub370\ube0c\ucf54\uc2a4\u300f\uc5d0\uc11c \uacf5\ubd80\uc911..\ud83d\udc40",source:"@site/docs\\kdt\\python\\python2.md",slug:"/kdt/python/python2",permalink:"/willbe/docs/kdt/python/python2",version:"current",sidebar_label:"Pandas",sidebar:"kdt",previous:{title:"Numpy \ub77c\uc774\ube0c\ub7ec\ub9ac",permalink:"/willbe/docs/kdt/python/python1"},next:{title:"Matplotlib \ub77c\uc774\ube0c\ub7ec\ub9ac",permalink:"/willbe/docs/kdt/python/python3"}},p=[{value:"1. Pandas \uc2dc\uc791\ud558\uae30",id:"1-pandas-\uc2dc\uc791\ud558\uae30",children:[{value:"Prerequisite: Table",id:"prerequisite-table",children:[]}]},{value:"2. Pandas\ub85c 1\ucc28\uc6d0 \ub370\uc774\ud130 \ub2e4\ub8e8\uae30 - Series",id:"2-pandas\ub85c-1\ucc28\uc6d0-\ub370\uc774\ud130-\ub2e4\ub8e8\uae30---series",children:[{value:"Series \uae30\ubcf8 \uba54\uc11c\ub4dc",id:"series-\uae30\ubcf8-\uba54\uc11c\ub4dc",children:[]},{value:"Series vs. ndarray",id:"series-vs-ndarray",children:[]},{value:"Series vs. Dictionary",id:"series-vs-dictionary",children:[]},{value:"Series\uc5d0 \uc774\ub984 \ubd99\uc774\uae30",id:"series\uc5d0-\uc774\ub984-\ubd99\uc774\uae30",children:[]}]},{value:"3. Pandas\ub85c 2\ucc28\uc6d0 \ub370\uc774\ud130 \ub2e4\ub8e8\uae30 - DataFrame",id:"3-pandas\ub85c-2\ucc28\uc6d0-\ub370\uc774\ud130-\ub2e4\ub8e8\uae30---dataframe",children:[{value:"DataFame \uae30\ubcf8 \uba54\uc11c\ub4dc",id:"datafame-\uae30\ubcf8-\uba54\uc11c\ub4dc",children:[]},{value:"Pandas \ud65c\uc6a9",id:"pandas-\ud65c\uc6a9",children:[]}]},{value:"+ Mission",id:"-mission",children:[]}],b={toc:p};function l(e){var n=e.components,a=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(t.a)({},b,a,{components:n,mdxType:"MDXLayout"}),Object(i.b)("p",null,"\ud83d\udca1 \u300eKDT \ud504\ub85c\uadf8\ub798\uba38\uc2a4 \uc778\uacf5\uc9c0\ub2a5 \ub370\ube0c\ucf54\uc2a4\u300f\uc5d0\uc11c \uacf5\ubd80\uc911..\ud83d\udc40  "),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},Object(i.b)("a",{parentName:"p",href:"https://pandas.pydata.org/"},"pandas document"),Object(i.b)("br",{parentName:"p"}),"\n",Object(i.b)("a",{parentName:"p",href:"https://www.kaggle.com/imdevskp/corona-virus-report"},"COVID-19 Dataset"),"\uc744 \uc774\uc6a9\ud55c\ub2e4.  "))),Object(i.b)("h2",{id:"1-pandas-\uc2dc\uc791\ud558\uae30"},"1. Pandas \uc2dc\uc791\ud558\uae30"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python",metastring:'title="pandas \uc124\uce58"',title:'"pandas','\uc124\uce58"':!0},"pip install pandas\n")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python",metastring:'title="pandas \ubaa8\ub4c8 \ubd88\ub7ec\uc624\uae30"',title:'"pandas',"\ubaa8\ub4c8":!0,'\ubd88\ub7ec\uc624\uae30"':!0},"import pandas as pd\n")),Object(i.b)("p",null,"Series: 1-D labeled array",Object(i.b)("br",{parentName:"p"}),"\n","DataFrame: 2-D labeled table, Series\uc758 \ubcd1\ub82c\uc801\uc778 \ubaa8\uc74c  "),Object(i.b)("h3",{id:"prerequisite-table"},"Prerequisite: Table"),Object(i.b)("p",null,"\ud589\uacfc \uc5f4\uc744 \uc774\uc6a9\ud558\uc5ec \ub370\uc774\ud130\ub97c \uc800\uc7a5\ud558\uace0 \uad00\ub9ac\ud558\ub294 \uc790\ub8cc \uad6c\uc870(\ucee8\ud14c\uc774\ub108)",Object(i.b)("br",{parentName:"p"}),"\n","\uc8fc\ub85c \ud589\uc740 \uac1c\uccb4, \uc5f4\uc740 \uc18d\uc131\uc744 \ub098\ud0c0\ub0b8\ub2e4.  "),Object(i.b)("h2",{id:"2-pandas\ub85c-1\ucc28\uc6d0-\ub370\uc774\ud130-\ub2e4\ub8e8\uae30---series"},"2. Pandas\ub85c 1\ucc28\uc6d0 \ub370\uc774\ud130 \ub2e4\ub8e8\uae30 - Series"),Object(i.b)("h3",{id:"series-\uae30\ubcf8-\uba54\uc11c\ub4dc"},"Series \uae30\ubcf8 \uba54\uc11c\ub4dc"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"pd.Series()"),": Series\uac1d\uccb4 \uc0dd\uc131    "),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"s = pd.Series([1, 4, 8, 16, 26])\ns\n# 0     1\n# 1     4\n# 2     8\n# 3    16\n# 4    26\n# dtype: int64\n\nt = pd.Series({'one':1, 'two':2, 'three':3})\nt\n# one      1\n# two      2\n# three    3\n# dtype: int64\n")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"Series\uac1d\uccb4.dtype"),": Series\uc5d0 \ub2f4\uae34 \ub370\uc774\ud130\uc758 \ud0c0\uc785\uc744 \ud655\uc778\ud560 \uc218 \uc788\ub2e4.  "),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"s.dtype\n# dtype('int64')\n")),Object(i.b)("h3",{id:"series-vs-ndarray"},"Series vs. ndarray"),Object(i.b)("p",null,"Series\ub294 ndarray\uc640 \uc720\uc0ac\ud558\ub2e4.",Object(i.b)("br",{parentName:"p"}),"\n","\uc778\ub371\uc2f1\uacfc \uc2ac\ub77c\uc774\ub529 \ubc29\ubc95\uc774 \ub3d9\uc77c\ud558\uba70, \ubd80\uac00\uc801\uc73c\ub85c \uc870\uac74\uc744 \uc774\uc6a9\ud558\uc5ec \uac80\uc0c9\ud560 \uc218 \uc788\ub2e4."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"t[1]\n# 2\n\ns[s > s.median()]  # s\uc758 \uc911\uc559\uac12\ubcf4\ub2e4 \ud070 \uac12\ub4e4\ub9cc \uac80\uc0c9\n# 3    16\n# 4    26\n# dtype: int64\n")),Object(i.b)("p",null,"\ub610\ud55c numpy\uc758 \uba54\uc11c\ub4dc\ub97c Series\uac1d\uccb4\uc5d0 \uc801\uc6a9\ud560 \uc218 \uc788\ub2e4.  "),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"np.exp(s)\n# 0    2.718282e+00\n# 1    5.459815e+01\n# 2    2.980958e+03\n# 3    8.886111e+06\n# 4    1.957296e+11\n# dtype: float64\n")),Object(i.b)("h3",{id:"series-vs-dictionary"},"Series vs. Dictionary"),Object(i.b)("p",null,"Series\uac1d\uccb4\ub294 \ub515\uc154\ub108\ub9ac\uc5d0\uc11c key\ub97c \uac80\uc0c9\ud558\uace0 \uac12\uc744 \ucd94\uac00\ud558\ub294 \ubc29\ubc95\uacfc \uc720\uc0ac\ud55c \ubc29\ubc95\uc744 \uc801\uc6a9\ud560 \uc218 \uc788\ub2e4.  "),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"t['one']\n# 1\n\nt['four'] = 4\nt\n# one      1\n# two      2\n# three    3\n# four     4\n# dtype: int64\n\n'two' in t\n# True\n\nt.get('five')  # 'five'\uac00 \uc788\uc73c\uba74 \uac12\uc744 \ub9ac\ud134\ud558\uace0, \uc5c6\uc73c\uba74 \uc544\ubb34\uac83\ub3c4 \ub9ac\ud134\ud558\uc9c0 \uc54a\uc74c  \nt.get('five', 0)  # 'five'\uac00 \uc788\uc73c\uba74 \uac12\uc744 \ub9ac\ud134\ud558\uace0, \uc5c6\uc73c\uba74 0\uc744 \ub9ac\ud134\n")),Object(i.b)("h3",{id:"series\uc5d0-\uc774\ub984-\ubd99\uc774\uae30"},"Series\uc5d0 \uc774\ub984 \ubd99\uc774\uae30"),Object(i.b)("p",null,"Series\uac1d\uccb4\ub294 name \uc18d\uc131\uc744 \uac00\uc9c0\uace0 \uc788\uc5b4 Series\uac1d\uccb4\ub97c \ub9cc\ub4e4 \ub54c \uc774\ub984\uc744 \ubd99\uc77c \uc218 \uc788\ub2e4.  "),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"s = pd.Series(np.random.randn(5), name='random_nums')\ns\n# 0   -0.756946\n# 1    0.839884\n# 2    0.410863\n# 3    0.463816\n# 4   -1.821163\n# Name: random_nums, dtype: float64\n\ns.name = '\uc784\uc758\uc758 \ub09c\uc218'\ns\n# 0   -0.756946\n# 1    0.839884\n# 2    0.410863\n# 3    0.463816\n# 4   -1.821163\n# Name: \uc784\uc758\uc758 \ub09c\uc218, dtype: float64\n")),Object(i.b)("h2",{id:"3-pandas\ub85c-2\ucc28\uc6d0-\ub370\uc774\ud130-\ub2e4\ub8e8\uae30---dataframe"},"3. Pandas\ub85c 2\ucc28\uc6d0 \ub370\uc774\ud130 \ub2e4\ub8e8\uae30 - DataFrame"),Object(i.b)("h3",{id:"datafame-\uae30\ubcf8-\uba54\uc11c\ub4dc"},"DataFame \uae30\ubcf8 \uba54\uc11c\ub4dc"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"pd.DataFrame()"),": DataFrame\uac1d\uccb4 \uc0dd\uc131  "),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"d = {'height':[1, 2, 3, 4],\n     'weight':[30, 40, 50, 60]}\ndf = pd.DataFrame(d)\nprint(df)\n#    height  weight\n# 0       1      30\n# 1       2      40\n# 2       3      50\n# 3       4      60\n")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"DataFrame\uac1d\uccb4.dtypes"),": DataFrame\uc5d0 \ub2f4\uae34 \ub370\uc774\ud130\uc758 \ud0c0\uc785\uc744 \ud655\uc778\ud560 \uc218 \uc788\ub2e4.  "),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"df.dtypes\n# height    int64\n# weight    int64\n# dtype: object\n")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"pd.read_csv(csv\ud30c\uc77c \uacbd\ub85c)"),": csv \ud30c\uc77c\uc744 DataFrame\uac1d\uccb4\ub85c \uc0dd\uc131\ud55c\ub2e4.  "),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"covid = pd.read_csv('data/country_wise_latest.csv')\n")),Object(i.b)("h3",{id:"pandas-\ud65c\uc6a9"},"Pandas \ud65c\uc6a9"),Object(i.b)("h4",{id:"\uc77c\ubd80\ubd84\ub9cc-\uad00\ucc30\ud558\uae30"},"\uc77c\ubd80\ubd84\ub9cc \uad00\ucc30\ud558\uae30"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"DataFrame\uac1d\uccb4.head(n)"),": \ucc98\uc74c n\uac1c\uc758 \ub370\uc774\ud130 \ucc38\uc870 (\uae30\ubcf8\uac12: 5)",Object(i.b)("br",{parentName:"p"}),"\n",Object(i.b)("inlineCode",{parentName:"p"},"DataFrame\uac1d\uccb4.tail(n)"),": \ub9c8\uc9c0\ub9c9 n\uac1c\uc758 \ub370\uc774\ud130 \ucc38\uc870 (\uae30\ubcf8\uac12: 5)  "),Object(i.b)("h4",{id:"\ub370\uc774\ud130-\uc811\uadfc\ud558\uae30"},"\ub370\uc774\ud130 \uc811\uadfc\ud558\uae30"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"DataFrame\uac1d\uccb4[\uceec\ub7fc\uba85]"),", ",Object(i.b)("inlineCode",{parentName:"p"},"DataFrame\uac1d\uccb4.\uceec\ub7fc\uba85"),": \ud574\ub2f9 \uceec\ub7fc\uc758 \uac12 \uac00\uc838\uc624\uae30  "),Object(i.b)("p",null,"DataFrame\uac1d\uccb4\uc758 \uac01 \uceec\ub7fc\uc740 Series\uac1d\uccb4\uc774\uae30 \ub54c\ubb38\uc5d0 Series\uac1d\uccb4\uc758 \uba54\uc11c\ub4dc\ub97c \uadf8\ub300\ub85c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4.  "),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"covid['Confirmed'][1:5]\n# 1     4880\n# 2    27973\n# 3      907\n# 4      950\n# Name: Confirmed, dtype: int64\n")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python",metastring:'title="\uc608\uc81c) \uc2e0\uaddc \ud655\uc9c4\uc790\uac00 100\uba85\uc774 \ub118\ub294 \uad6d\uac00"',title:'"\uc608\uc81c)',"\uc2e0\uaddc":!0,"\ud655\uc9c4\uc790\uac00":!0,"100\uba85\uc774":!0,"\ub118\ub294":!0,'\uad6d\uac00"':!0},"covid.loc[covid['New cases'] > 100, 'Country/Region'].head(3)\n# 0    Afghanistan\n# 1        Albania\n# 2        Algeria\n# Name: Country/Region, dtype: object\n")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python",metastring:'title="\uc608\uc81c) WHO \uc9c0\uc5ed(WHO Region)\uc774 \ub3d9\ub0a8\uc544\uc2dc\uc544\uc778 \uad6d\uac00"',title:'"\uc608\uc81c)',WHO:!0,"\uc9c0\uc5ed(WHO":!0,"Region)\uc774":!0,"\ub3d9\ub0a8\uc544\uc2dc\uc544\uc778":!0,'\uad6d\uac00"':!0},"covid['WHO Region'].unique()\n# array(['Eastern Mediterranean', 'Europe', 'Africa', 'Americas',\n#        'Western Pacific', 'South-East Asia'], dtype=object)\ncovid.loc[covid['WHO Region'] == 'Eastern Mediterranean', 'Country/Region'].head(3)\n# 0     Afghanistan\n# 12        Bahrain\n# 48       Djibouti\n# Name: Country/Region, dtype: object\n")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"DataFrame\uac1d\uccb4.loc[row, col]"),": \uc778\ub371\uc2a4\ub97c \uc774\uc6a9\ud558\uc5ec \ub370\uc774\ud130\ub97c \uac00\uc838\uc628\ub2e4.  "),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"books_dict = {'Available':[True, True, False],\n              'Location':[102, 215, 323],\n              'Genre':['Programming', 'Physics', 'Math']}\nbooks_df = pd.DataFrame(books_dict,\n                        index=['\ubc84\uadf8\ub780 \ubb34\uc5c7\uc778\uac00', '\ub450\uadfc\ub450\uadfc \ubb3c\ub9ac\ud559', '\ubbf8\ubd84\ud574\uc918 \ud648\uc988'])\nprint(books_df)\n#           Available  Location        Genre\n# \ubc84\uadf8\ub780 \ubb34\uc5c7\uc778\uac00       True       102  Programming\n# \ub450\uadfc\ub450\uadfc \ubb3c\ub9ac\ud559       True       215      Physics\n# \ubbf8\ubd84\ud574\uc918 \ud648\uc988       False       323         Math\n\nbooks_df.loc['\ubc84\uadf8\ub780 \ubb34\uc5c7\uc778\uac00']\n# Available           True\n# Location             102\n# Genre        Programming\n# Name: \ubc84\uadf8\ub780 \ubb34\uc5c7\uc778\uac00, dtype: object\n")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python",metastring:"title=\"\uc608\uc81c) \ucc45 '\ubbf8\ubd84\ud574\uc918 \ud648\uc988'\ub294 \ub300\ucd9c\uc774 \uac00\ub2a5\ud560\uae4c?\"",title:'"\uc608\uc81c)',"\ucc45":!0,"'\ubbf8\ubd84\ud574\uc918":!0,"\ud648\uc988'\ub294":!0,"\ub300\ucd9c\uc774":!0,'\uac00\ub2a5\ud560\uae4c?"':!0},"books_df.loc['\ubbf8\ubd84\ud574\uc918 \ud648\uc988', 'Available']\n# False\n")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"DataFrame\uac1d\uccb4.iloc[row\uc778\ub371\uc2a4, col\uc778\ub371\uc2a4]"),": \uc778\ub371\uc2a4 \ubc88\ud638\ub97c \uc774\uc6a9\ud558\uc5ec \ub370\uc774\ud130\ub97c \uac00\uc838\uc624\uba70, \uc2ac\ub77c\uc774\uc2f1\ub3c4 \uac00\ub2a5\ud558\ub2e4.  "),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"books_df.iloc[1:, 0:2]\n#           Available  Location\n# \ub450\uadfc\ub450\uadfc \ubb3c\ub9ac\ud559       True       215\n# \ubbf8\ubd84\ud574\uc918 \ud648\uc988       False       323\n")),Object(i.b)("h4",{id:"groupby"},"Groupby"),Object(i.b)("p",null,"SQL\uc758 groupby\uc640 \ub3d9\uc77c\ud558\ub2e4.",Object(i.b)("br",{parentName:"p"}),"\n","\ud14c\uc774\ube14\uc744 Split, Apply, Combine \uacfc\uc815\uc744 \uac70\uccd0 \ub354 \uc88b\uc740 \uacb0\uacfc\ub97c \uc5bb\ub294 \uac83\uc774 \ubaa9\ud45c\ub2e4.",Object(i.b)("br",{parentName:"p"}),"\n","Split: \ud2b9\uc815\ud55c \uae30\uc900\uc744 \ubc14\ud0d5\uc73c\ub85c DataFrame\uc744 \ubd84\ud560\ud55c\ub2e4.",Object(i.b)("br",{parentName:"p"}),"\n","Apply: \uc77c\ubc18\uc801\uc73c\ub85c sum(), mean(), median() \ub4f1\uc758\ud1b5\uacc4\ud568\uc218\ub97c \uc801\uc6a9\ud558\uc5ec \uac01 \ub370\uc774\ud130\ub97c \uc555\ucd95\ud55c\ub2e4.",Object(i.b)("br",{parentName:"p"}),"\n","Combine: Apply\ub41c \uacb0\uacfc\ub97c \ubc14\ud0d5\uc73c\ub85c \uc0c8\ub85c\uc6b4 Series\ub97c \uc0dd\uc131\ud55c\ub2e4. (group_key: applied_value \ud615\ud0dc)"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"DataFrame\uac1d\uccb4.groupby()"),": groupby\ub97c \uc218\ud589\ud55c\ub2e4.  "),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python",metastring:'title="\uc608\uc81c) WHO Region\ubcc4 \ud655\uc9c4\uc790 \uc218"',title:'"\uc608\uc81c)',WHO:!0,"Region\ubcc4":!0,"\ud655\uc9c4\uc790":!0,'\uc218"':!0},"# Split\ncovid_by_region = covid['Confirmed'].groupby(by=covid['WHO Region'])\ncovid_by_region\n# <pandas.core.groupby.generic.SeriesGroupBy object at 0x00000233E6FAF460>\n\n# Apply\ncovid_by_resion.sum()\n# WHO Region\n# Africa                    723207\n# Americas                 8839286\n# Eastern Mediterranean    1490744\n# Europe                   3299523\n# South-East Asia          1835297\n# Western Pacific           292428\n# Name: Confirmed, dtype: int64\n")),Object(i.b)("p",null,"\u2757 Americas\uc640 Europe\uc758 \ud655\uc9c4\uc790 \uc218\uac00 \ub2e4\ub978 \uc9c0\uc5ed\uc5d0 \ube44\ud574 \ub9e4\uc6b0 \ub192\ub2e4. \uadf8\ub807\ub2e4\uba74 \ud574\ub2f9 \uc9c0\uc5ed\uc758 \ud45c\ubcf8\uc774 \ub9ce\uc544\uc11c\uc77c\uae4c?"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python",metastring:'title="\uc9c0\uc5ed\ubcc4 \uac10\uc5fc\uc790 \uc218"',title:'"\uc9c0\uc5ed\ubcc4',"\uac10\uc5fc\uc790":!0,'\uc218"':!0},"covid_by_region.mean()\n# WHO Region\n# Africa                    15066.812500\n# Americas                 252551.028571\n# Eastern Mediterranean     67761.090909\n# Europe                    58920.053571\n# South-East Asia          183529.700000\n# Western Pacific           18276.750000\n# Name: Confirmed, dtype: float64\n")),Object(i.b)("p",null,"\u2757 Americas\ub294 \uc5ec\uc804\uc774 \ub192\uc740 \uc218\uce58\ub97c \ubcf4\uc774\uc9c0\ub9cc, Europe\uc740 \ub192\uc9c0 \uc54a\uace0 \uc624\ud788\ub824 South-East Asia\uac00 \ud6e8\uc52c \ub192\uc740 \uc218\uce58\ub97c \ubcf4\uc778\ub2e4. \ub530\ub77c\uc11c Europe\uc740 \ud45c\ubcf8 \uc218\uac00 \ub9ce\uc544\uc11c \ub2e8\uc21c\ud788 \uc591\uc774 \ub9ce\uc740 \uacbd\uc6b0\uc784\uc744 \ud655\uc778\ud560 \uc218 \uc788\ub2e4.  "),Object(i.b)("h2",{id:"-mission"},"+ Mission"),Object(i.b)("h4",{id:"1-covid-\ub370\uc774\ud130\uc5d0\uc11c-100-case-\ub300\ube44-\uc0ac\ub9dd\ub960\uc774-\uac00\uc7a5-\ub192\uc740-\uad6d\uac00\ub294"},"1. covid \ub370\uc774\ud130\uc5d0\uc11c 100 case \ub300\ube44 \uc0ac\ub9dd\ub960\uc774 \uac00\uc7a5 \ub192\uc740 \uad6d\uac00\ub294?"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"covid.loc[covid['Deaths / 100 Cases'] == covid['Deaths / 100 Cases'].max(), 'Country/Region']\n# 184    Yemen\n# Name: Country/Region, dtype: object\n")),Object(i.b)("h4",{id:"2-covid-\ub370\uc774\ud130\uc5d0\uc11c-\uc2e0\uaddc-\ud655\uc9c4\uc790\uac00-\uc5c6\ub294-\ub098\ub77c-\uc911-who-resion\uc774-europe\uc778-\ub370\uc774\ud130\ub97c-\ubaa8\ub450-\ucd9c\ub825\ud558\uba74"},"2. covid \ub370\uc774\ud130\uc5d0\uc11c \uc2e0\uaddc \ud655\uc9c4\uc790\uac00 \uc5c6\ub294 \ub098\ub77c \uc911 WHO Resion\uc774 'Europe'\uc778 \ub370\uc774\ud130\ub97c \ubaa8\ub450 \ucd9c\ub825\ud558\uba74?"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"covid[(covid['New cases'] == 0)&(covid['WHO Region'] == 'Europe')]\n# 56, 75, 95, 100, 113, 143, 157 \ucd1d 7\uac1c \ud589 \ucd9c\ub825\n")),Object(i.b)("h4",{id:"3-\ub2e4\uc74c-\ub370\uc774\ud130\ub97c-\uc774\uc6a9\ud558\uc5ec-\uac01-region\ubcc4\ub85c-\uc544\ubcf4\uce74\ub3c4\uac00-\uac00\uc7a5-\ube44\uc2fc-averageprice\ub97c-\ucd9c\ub825\ud558\uba74"},"3. ",Object(i.b)("a",{parentName:"h4",href:"https://www.kaggle.com/neuromusic/avocado-prices"},"\ub2e4\uc74c \ub370\uc774\ud130"),"\ub97c \uc774\uc6a9\ud558\uc5ec \uac01 Region\ubcc4\ub85c \uc544\ubcf4\uce74\ub3c4\uac00 \uac00\uc7a5 \ube44\uc2fc AveragePrice\ub97c \ucd9c\ub825\ud558\uba74?"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"avocado = pd.read_csv('data/avocado.csv')\navocado['AveragePrice'].groupby(by=avocado['region']).max()\n# region\n# Albany                 2.13\n# Atlanta                2.75\n# ...\n# West                   2.52\n# WestTexNewMexico       2.93\n# Name: AveragePrice, dtype: float64\n")))}l.isMDXComponent=!0},163:function(e,n,a){"use strict";a.d(n,"a",(function(){return s})),a.d(n,"b",(function(){return u}));var t=a(0),r=a.n(t);function i(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function o(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function c(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?o(Object(a),!0).forEach((function(n){i(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function p(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},i=Object.keys(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var b=r.a.createContext({}),l=function(e){var n=r.a.useContext(b),a=n;return e&&(a="function"==typeof e?e(n):c(c({},n),e)),a},s=function(e){var n=l(e.components);return r.a.createElement(b.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},m=r.a.forwardRef((function(e,n){var a=e.components,t=e.mdxType,i=e.originalType,o=e.parentName,b=p(e,["components","mdxType","originalType","parentName"]),s=l(a),m=t,u=s["".concat(o,".").concat(m)]||s[m]||d[m]||i;return a?r.a.createElement(u,c(c({ref:n},b),{},{components:a})):r.a.createElement(u,c({ref:n},b))}));function u(e,n){var a=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var i=a.length,o=new Array(i);o[0]=m;var c={};for(var p in n)hasOwnProperty.call(n,p)&&(c[p]=n[p]);c.originalType=e,c.mdxType="string"==typeof e?e:t,o[1]=c;for(var b=2;b<i;b++)o[b]=a[b];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,a)}m.displayName="MDXCreateElement"}}]);