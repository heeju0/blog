(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{106:function(e,t,n){"use strict";n.d(t,"a",(function(){return o})),n.d(t,"b",(function(){return j}));var a=n(0),r=n.n(a);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function b(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},c=Object.keys(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=r.a.createContext({}),d=function(e){var t=r.a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):b(b({},t),e)),n},o=function(e){var t=d(e.components);return r.a.createElement(i.Provider,{value:t},e.children)},O={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,c=e.originalType,l=e.parentName,i=p(e,["components","mdxType","originalType","parentName"]),o=d(n),m=a,j=o["".concat(l,".").concat(m)]||o[m]||O[m]||c;return n?r.a.createElement(j,b(b({ref:t},i),{},{components:n})):r.a.createElement(j,b({ref:t},i))}));function j(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var c=n.length,l=new Array(c);l[0]=m;var b={};for(var p in t)hasOwnProperty.call(t,p)&&(b[p]=t[p]);b.originalType=e,b.mdxType="string"==typeof e?e:a,l[1]=b;for(var i=2;i<c;i++)l[i]=n[i];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},77:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return b})),n.d(t,"toc",(function(){return p})),n.d(t,"default",(function(){return d}));var a=n(3),r=n(7),c=(n(0),n(106)),l={id:"pandas2",title:"\ub370\uc774\ud130 \uc785\ucd9c\ub825",sidebar_label:"\ub370\uc774\ud130 \uc785\ucd9c\ub825"},b={unversionedId:"data-science/pandas2",id:"data-science/pandas2",isDocsHomePage:!1,title:"\ub370\uc774\ud130 \uc785\ucd9c\ub825",description:"\ud83d\udca1 \ucc45 \u300e\ud30c\uc774\uc36c \uba38\uc2e0\ub7ec\ub2dd \ud310\ub2e4\uc2a4 \ub370\uc774\ud130 \ubd84\uc11d\u300f\uc73c\ub85c \uacf5\ubd80\uc911..\ud83d\udc40",source:"@site/docs\\data-science\\pandas2.md",slug:"/data-science/pandas2",permalink:"/willbe/docs/data-science/pandas2",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/data-science/pandas2.md",version:"current",sidebar_label:"\ub370\uc774\ud130 \uc785\ucd9c\ub825",sidebar:"datascience",previous:{title:"\ud310\ub2e4\uc2a4 \uc785\ubb38",permalink:"/willbe/docs/data-science/pandas1"},next:{title:"\ub370\uc774\ud130 \uc0b4\ud3b4\ubcf4\uae30",permalink:"/willbe/docs/data-science/pandas3"}},p=[{value:"1. \uc678\ubd80 \ud30c\uc77c \uc77d\uc5b4\uc624\uae30",id:"1-\uc678\ubd80-\ud30c\uc77c-\uc77d\uc5b4\uc624\uae30",children:[{value:"1-1. CSV \ud30c\uc77c",id:"1-1-csv-\ud30c\uc77c",children:[]},{value:"1-2. EXCEL \ud30c\uc77c",id:"1-2-excel-\ud30c\uc77c",children:[]},{value:"1-3. JSON \ud30c\uc77c",id:"1-3-json-\ud30c\uc77c",children:[]}]},{value:"2. \uc6f9(web)\uc5d0\uc11c \uac00\uc838\uc624\uae30",id:"2-\uc6f9web\uc5d0\uc11c-\uac00\uc838\uc624\uae30",children:[{value:"2-1. HTML \uc6f9 \ud398\uc774\uc9c0\uc5d0\uc11c \ud45c \uc18d\uc131 \uac00\uc838\uc624\uae30",id:"2-1-html-\uc6f9-\ud398\uc774\uc9c0\uc5d0\uc11c-\ud45c-\uc18d\uc131-\uac00\uc838\uc624\uae30",children:[]},{value:"2-2. \uc6f9 \uc2a4\ud06c\ub798\ud551",id:"2-2-\uc6f9-\uc2a4\ud06c\ub798\ud551",children:[]}]},{value:"3. API \ud65c\uc6a9\ud558\uc5ec \ub370\uc774\ud130 \uc218\uc9d1\ud558\uae30",id:"3-api-\ud65c\uc6a9\ud558\uc5ec-\ub370\uc774\ud130-\uc218\uc9d1\ud558\uae30",children:[]},{value:"4. \ub370\uc774\ud130 \uc800\uc7a5\ud558\uae30",id:"4-\ub370\uc774\ud130-\uc800\uc7a5\ud558\uae30",children:[{value:"4-1. CSV \ud30c\uc77c\ub85c \uc800\uc7a5",id:"4-1-csv-\ud30c\uc77c\ub85c-\uc800\uc7a5",children:[]},{value:"4-2. JSON \ud30c\uc77c\ub85c \uc800\uc7a5",id:"4-2-json-\ud30c\uc77c\ub85c-\uc800\uc7a5",children:[]},{value:"4-3. Excel \ud30c\uc77c\ub85c \uc800\uc7a5",id:"4-3-excel-\ud30c\uc77c\ub85c-\uc800\uc7a5",children:[]},{value:"4-4. \uc5ec\ub7ec \uac1c\uc758 \ub370\uc774\ud130\ud504\ub808\uc784\uc744 \ud558\ub098\uc758 Excel \ud30c\uc77c\ub85c \uc800\uc7a5",id:"4-4-\uc5ec\ub7ec-\uac1c\uc758-\ub370\uc774\ud130\ud504\ub808\uc784\uc744-\ud558\ub098\uc758-excel-\ud30c\uc77c\ub85c-\uc800\uc7a5",children:[]}]}],i={toc:p};function d(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(a.a)({},i,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"\ud83d\udca1 \ucc45 \u300e\ud30c\uc774\uc36c \uba38\uc2e0\ub7ec\ub2dd \ud310\ub2e4\uc2a4 \ub370\uc774\ud130 \ubd84\uc11d\u300f\uc73c\ub85c \uacf5\ubd80\uc911..\ud83d\udc40"),Object(c.b)("h2",{id:"1-\uc678\ubd80-\ud30c\uc77c-\uc77d\uc5b4\uc624\uae30"},"1. \uc678\ubd80 \ud30c\uc77c \uc77d\uc5b4\uc624\uae30"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(a.a)({parentName:"tr"},{align:"center"}),"File Format"),Object(c.b)("th",Object(a.a)({parentName:"tr"},{align:"center"}),"Reader"),Object(c.b)("th",Object(a.a)({parentName:"tr"},{align:"center"}),"Writer"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"CSV"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"read_csv"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"to_csv")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"JSON"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"read_json"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"to_json")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"HTML"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"read_html"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"to_html")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"Local clipboard"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"read_clipboard"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"to_clipboard")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"MS Excel"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"read_excel"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"to_excel")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"HDF5 Format"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"read_hdf"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"to_hdf")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"SQL"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"read_sql"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"to_sql")))),Object(c.b)("p",null,"\u3164\u3164\u3164\u3164","[\ud45c 2-1]"," \ud310\ub2e4\uc2a4 \ub370\uc774\ud130 \uc785\ucd9c\ub825 \ub3c4\uad6c"),Object(c.b)("h3",{id:"1-1-csv-\ud30c\uc77c"},"1-1. CSV \ud30c\uc77c"),Object(c.b)("p",null,"\ub370\uc774\ud130 \uac12\uc744 \uc27c\ud45c(,)\ub85c \uad6c\ubd84\ud558\uace0 \uc788\ub2e4\ub294 \uc758\ubbf8\ub85c CSV(comma-seperated values)\ub77c\uace0 \ubd80\ub974\ub294 \ud14d\uc2a4\ud2b8 \ud30c\uc77c\uc774\ub2e4. \uc27c(,)\ub85c \uc5f4\uc744 \uad6c\ubd84\ud558\uace0 \uc904\ubc14\uafc8\uc73c\ub85c \ud589\uc744 \uad6c\ubd84\ud55c\ub2e4.  "),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"\ud83d\udcda CSV \ud30c\uc77c \u2192 \ub370\uc774\ud130\ud504\ub808\uc784: pd.read_csv('\ud30c\uc77c \uacbd\ub85c(\uc774\ub984)')")),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python",metastring:'title="<\uc608\uc81c 2-1> CSV \ud30c\uc77c \uc77d\uae30"',title:'"<\uc608\uc81c',"2-1>":!0,CSV:!0,"\ud30c\uc77c":!0,'\uc77d\uae30"':!0}),"file_path = './read_csv_sample.csv'\ndf1 = pd.read_csv(file_path)\nprint(df1)\n#    c0  c1  c2  c3\n# 0   0   1   4   7\n# 1   1   2   5   8\n# 2   2   3   6   9\n\ndf2 = pd.read_csv(file_path, header=None)\nprint(df2)\n#     0   1   2   3\n# 0  c0  c1  c2  c3\n# 1   0   1   4   7\n# 2   1   2   5   8\n# 3   2   3   6   9\n\ndf3 = pd.read_csv(file_path, index_col=None)\nprint(df3)\n#    c0  c1  c2  c3\n# 0   0   1   4   7\n# 1   1   2   5   8\n# 2   2   3   6   9\n\ndf4 = pd.read_csv(file_path, index_col='c0')\nprint(df4)\n#     c1  c2  c3\n# c0            \n# 0    1   4   7\n# 1    2   5   8\n# 2    3   6   9\n")),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"\uc635\uc158"),Object(c.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"\uc124\uba85"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"path"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"\ud30c\uc77c\uc758 \uc704\uce58(\ud30c\uc77c\uba85 \ud3ec\ud568), URL")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"sep/delimiter"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"\ud14d\uc2a4\ud2b8 \ub370\uc774\ud130\ub97c \ud544\ub4dc\ubcc4\ub85c \uad6c\ubd84\ud558\ub294 \ubb38\uc790")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"header"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"\uc5f4 \uc774\ub984\uc73c\ub85c \uc0ac\uc6a9\ub420 \ud589\uc758 \ubc88\ud638(\uae30\ubcf8\uac12\uc740 0) ",Object(c.b)("br",null)," header\uac00    \uc5c6\uace0 \uccab \ud589\ubd80\ud130 \ub370\uc774\ud130\uac00 \uc788\ub294 \uacbd\uc6b0 None\uc73c\ub85c \uc9c0\uc815 \uac00\ub2a5")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"index_col"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"\ud589 \uc778\ub371\uc2a4\ub85c \uc0ac\uc6a9\ud560 \uc5f4\uc758 \ubc88\ud638 \ub610\ub294 \uc5f4 \uc774\ub984")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"names"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"\uc5f4 \uc774\ub984\uc73c\ub85c \uc0ac\uc6a9\ud560 \ubb38\uc790\uc5f4\uc758 \ub9ac\uc2a4\ud2b8")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"skiprows"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"\ucc98\uc74c \uba87 \uc904\uc744 skip\ud560 \uac83\uc778\uc9c0 \uc124\uc815(\uc22b\uc790 \uc785\ub825) ",Object(c.b)("br",null)," skip\ud558\ub824\ub294 \ud589\uc758 \ubc88\ud638\ub97c \ub2f4\uc740 \ub9ac\uc2a4\ud2b8\ub97c \uc124\uc815 \uac00\ub2a5(\uc608: ","[1, 3, 5]",")")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"parse_dates"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"\ub0a0\uc9dc \ud14d\uc2a4\ud2b8\ub97c datetime64\ub85c \ubcc0\ud658\ud560 \uac83\uc778\uc9c0 \uc124\uc815(\uae30\ubcf8\uac12\uc740 False)")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"skip_footer"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"\ub9c8\uc9c0\ub9c9 \uba87 \uc904\uc744 skip\ud560 \uac83\uc778\uc9c0 \uc124\uc815(\uc22b\uc790 \uc785\ub825)")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"encoding"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"\ud14d\uc2a4\ud2b8 \uc778\ucf54\ub529 \uc885\ub958\ub97c \uc9c0\uc815(\uc608: 'utf-8')")))),Object(c.b)("p",null,"\u3164\u3164\u3164\u3164\u3164\u3164\u3164\u3164\u3164\u3164\u3164\u3164\u3164","[\ud45c 2-2]"," read_csv() \ud568\uc218\uc758 \uc635\uc158"),Object(c.b)("h3",{id:"1-2-excel-\ud30c\uc77c"},"1-2. EXCEL \ud30c\uc77c"),Object(c.b)("p",null,"read_excel() \ud568\uc218\uc758 \uc0ac\uc6a9\ubc95\uc740 \uc55e\uc5d0\uc11c \uc0b4\ud3b4\ubcf8 read_csv() \ud568\uc218\uc640 \uac70\uc758 \ube44\uc2b7\ud558\uba70, \ub300\ubd80\ubd84\uc758 \uc635\uc158\uc744 \uadf8\ub300\ub85c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4.  "),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"\ud83d\udcda Excel \ud30c\uc77c \u2192 \ub370\uc774\ud130\ud504\ub808\uc784: pd.read_excel('\ud30c\uc77c \uacbd\ub85c(\uc774\ub984)')")),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python",metastring:'title="<\uc608\uc81c 2-2> Excel \ud30c\uc77c \uc77d\uae30"',title:'"<\uc608\uc81c',"2-2>":!0,Excel:!0,"\ud30c\uc77c":!0,'\uc77d\uae30"':!0}),"df1 = pd.read_excel('./\ub0a8\ubd81\ud55c\ubc1c\uc804\uc804\ub825\ub7c9.xlsx')\nprint(df1)\n#   \uc804\ub825\ub7c9 (\uc5b5\u33beh) \ubc1c\uc804 \uc804\ub825\ubcc4  1990  1991  1992    ...  2016\n# 0        \ub0a8\ud55c     \ud569\uacc4  1077  1186  1310    ...  5404\n# 1       NaN     \uc218\ub825    64    51    49      ...    66  \n# 2       NaN     \ud654\ub825   484   573   696     ...  3523   \n# 3       NaN    \uc6d0\uc790\ub825   529   563   565     ...  1620   \n# 4       NaN    \uc2e0\uc7ac\uc0dd     -     -     -     ...   195   \n# 5        \ubd81\ud55c     \ud569\uacc4   277   263   247     ...   239   \n# 6       NaN     \uc218\ub825   156   150   142     ...   128   \n# 7       NaN     \ud654\ub825   121   113   105      ...   111   \n# 8       NaN    \uc6d0\uc790\ub825     -     -     -     ...     -   \n\n# [9 rows x 29 columns]\n\ndf2 = pd.read_excel('./\ub0a8\ubd81\ud55c\ubc1c\uc804\uc804\ub825\ub7c9.xlsx', header=None)\nprint(df2)\n#           0       1     2     3     4     ...      28\n#   \uc804\ub825\ub7c9 (\uc5b5\u33beh) \ubc1c\uc804 \uc804\ub825\ubcc4  1990  1991  1992    ...  2016\n# 0        \ub0a8\ud55c     \ud569\uacc4  1077  1186  1310    ...  5404\n# 1       NaN     \uc218\ub825    64    51    49      ...    66  \n# 2       NaN     \ud654\ub825   484   573   696     ...  3523   \n# 3       NaN    \uc6d0\uc790\ub825   529   563   565     ...  1620   \n# 4       NaN    \uc2e0\uc7ac\uc0dd     -     -     -     ...   195   \n# 5        \ubd81\ud55c     \ud569\uacc4   277   263   247     ...   239   \n# 6       NaN     \uc218\ub825   156   150   142     ...   128   \n# 7       NaN     \ud654\ub825   121   113   105      ...   111   \n# 8       NaN    \uc6d0\uc790\ub825     -     -     -     ...     -   \n\n# [10 rows x 29 columns]\n\n")),Object(c.b)("p",null,'\uc544\ub098\ucf58\ub2e4 \ubc30\ud3ec\ud310\uc744 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\ub294 \uacbd\uc6b0 "ImportError: Install xlrd >= 0.9.0 for Excel support"\uc640 \uac19\uc774 \uc624\ub958\uba54\uc2dc\uc9c0\uac00 \ucd9c\ub825\ub418\uba74 Excel \ud30c\uc77c \ub370\uc774\ud130 \ucd94\ucd9c\uc744 \uc9c0\uc6d0\ud558\ub294 xlrd \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uc124\uce58\ud574\uc57c \ud55c\ub2e4.  '),Object(c.b)("h3",{id:"1-3-json-\ud30c\uc77c"},"1-3. JSON \ud30c\uc77c"),Object(c.b)("p",null,"JSON \ud30c\uc77c(\ud655\uc7a5\uc790: .json)\uc740 \ub370\uc774\ud130 \uacf5\uc720\ub97c \ubaa9\uc801\uc73c\ub85c \uac1c\ubc1c\ub41c \ud2b9\uc218\ud55c \ud30c\uc77c \ud615\uc2dd\uc774\ub2e4. \ud30c\uc774\uc36c \ub515\uc154\ub108\ub9ac\uc640 \ube44\uc2b7\ud558\uac8c 'key : value' \uad6c\uc870\ub97c \uac16\ub294\ub370, \uad6c\uc870\uac00 \uc911\ucca9\ub418\ub294 \ubc29\uc2dd\uc5d0 \ub530\ub77c \uc635\uc158\uc744 \ub2e4\ub974\uac8c \uc801\uc6a9\ud55c\ub2e4.  "),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"\ud83d\udcda JSON \ud30c\uc77c \u2192 \ub370\uc774\ud130\ud504\ub808\uc784 \ud30c\uc77c: pd.read_json('\ud30c\uc77c \uacbd\ub85c(\uc774\ub984)')")),Object(c.b)("p",null,"JSON \ud30c\uc77c \ud615\uc2dd",Object(c.b)("br",{parentName:"p"}),"\n","{",Object(c.b)("br",{parentName:"p"}),"\n",'\u3164\u3164"name":{pandas:"",',Object(c.b)("br",{parentName:"p"}),"\n",'\u3164\u3164\u3164\u3164 \u3164   NumPy:"",',Object(c.b)("br",{parentName:"p"}),"\n",'\u3164\u3164\u3164\u3164 \u3164   matplotlib:"",},',Object(c.b)("br",{parentName:"p"}),"\n",'\u3164\u3164"year":{pandas:2008,',Object(c.b)("br",{parentName:"p"}),"\n","\u3164\u3164\u3164\u3164 \u3164   NumPy:2006,",Object(c.b)("br",{parentName:"p"}),"\n","\u3164\u3164\u3164\u3164 \u3164   matplotlib:2003,},",Object(c.b)("br",{parentName:"p"}),"\n",'\u3164\u3164"developer":{pandas:"Wes Mckinneye",',Object(c.b)("br",{parentName:"p"}),"\n",'\u3164\u3164\u3164\u3164 \u3164\u3164\u3164   NumPy:"Travis Oliphant",',Object(c.b)("br",{parentName:"p"}),"\n",'\u3164\u3164\u3164\u3164 \u3164\u3164\u3164   matplotlib:"John D. Hunter",},',Object(c.b)("br",{parentName:"p"}),"\n",'\u3164\u3164"opensource":{pandas:"True",',Object(c.b)("br",{parentName:"p"}),"\n",'\u3164\u3164\u3164\u3164\u3164 \u3164\u3164\u3164   NumPy:"True",',Object(c.b)("br",{parentName:"p"}),"\n",'\u3164\u3164\u3164\u3164\u3164 \u3164\u3164\u3164   matplotlib:"True",}',Object(c.b)("br",{parentName:"p"}),"\n","}"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python",metastring:'title="<\uc608\uc81c 2-3> JSON \ud30c\uc77c \uc77d\uae30"',title:'"<\uc608\uc81c',"2-3>":!0,JSON:!0,"\ud30c\uc77c":!0,'\uc77d\uae30"':!0}),"\ndf = pd.read_json('./read_json_sample.json')\nprint(df)\n#            name  year        developer opensource\n# pandas           2008    Wes Mckinneye       True\n# NumPy            2006  Travis Oliphant       True\n# matplotlib       2003   John D. Hunter       True\nprint(df.index)\n# Index(['pandas', 'NumPy', 'matplotlib'], dtype='object')\n")),Object(c.b)("h2",{id:"2-\uc6f9web\uc5d0\uc11c-\uac00\uc838\uc624\uae30"},"2. \uc6f9(web)\uc5d0\uc11c \uac00\uc838\uc624\uae30"),Object(c.b)("h3",{id:"2-1-html-\uc6f9-\ud398\uc774\uc9c0\uc5d0\uc11c-\ud45c-\uc18d\uc131-\uac00\uc838\uc624\uae30"},"2-1. HTML \uc6f9 \ud398\uc774\uc9c0\uc5d0\uc11c \ud45c \uc18d\uc131 \uac00\uc838\uc624\uae30"),Object(c.b)("p",null,"read_html() \ud568\uc218\ub294 HTML \uc6f9 \ud398\uc774\uc9c0\uc5d0 \uc788\ub294 <table",">"," \ud0dc\uadf8\uc5d0\uc11c \ud45c \ud615\uc2dd\uc758 \ub370\uc774\ud130\ub97c \ubaa8\ub450 \ucc3e\uc544 \ub370\uc774\ud130\ud504\ub808\uc784\uc73c\ub85c \ubcc0\ud658\ud55c\ub2e4.  "),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"\ud83d\udcda HTML \ud45c \uc18d\uc131 \uc77d\uae30: pd.read_html('\uc6f9 \uc8fc\uc18c(URL)' \ub610\ub294 'HTML \ud30c\uc77c \uacbd\ub85c(\uc774\ub984)')"),"  "),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python",metastring:'title="<\uc608\uc81c 2-4> \uc6f9\uc5d0\uc11c \ud45c \uc815\ubcf4 \uc77d\uae30"',title:'"<\uc608\uc81c',"2-4>":!0,"\uc6f9\uc5d0\uc11c":!0,"\ud45c":!0,"\uc815\ubcf4":!0,'\uc77d\uae30"':!0}),"url = 'part2/sample.html'\ntables = pd.read_html(url)\nprint(len(tables))\n# 2\n\nfor i in range(len(tables)):\n    print('tables[%s]'%i)\n    print(tables[i])\n# tables[0]\n#    Unnamed: 0  c0  c1  c2  c3\n# 0           0   0   1   4   7\n# 1           1   1   2   5   8\n# 2           2   2   3   6   9\n# tables[1]\n#          name  year        developer  opensource\n# 0       NumPy  2006  Travis Oliphant        True\n# 1  matplotlib  2003   John D. Hunter        True\n# 2      pandas  2008    Wes Mckinneye        True\ndf = tables[1]\ndf.set_index(['name'], inplace=True)\nprint(df)\n#             year        developer  opensource\n# name                                         \n# NumPy       2006  Travis Oliphant        True\n# matplotlib  2003   John D. Hunter        True\n# pandas      2008    Wes Mckinneye        True\n")),Object(c.b)("h3",{id:"2-2-\uc6f9-\uc2a4\ud06c\ub798\ud551"},"2-2. \uc6f9 \uc2a4\ud06c\ub798\ud551"),Object(c.b)("p",null,"BeautifulSoup \ub4f1 \uc6f9 \uc2a4\ud06c\ub798\ud551(scraping) \ub3c4\uad6c\ub85c \uc218\uc9d1\ud55c \ub370\uc774\ud130\ub97c \ud310\ub2e4\uc2a4 \ub370\uc774\ud130\ud504\ub808\uc784\uc73c\ub85c \uc815\ub9ac\ud558\ub294 \ubc29\ubc95\uc744 \uc124\uba85\ud55c\ub2e4. \uba3c\uc800 \uc2a4\ud06c\ub798\ud551\ud55c \ub0b4\uc6a9\uc744 \ud30c\uc774\uc36c \ub9ac\uc2a4\ud2b8, \ub515\uc154\ub108\ub9ac \ub4f1\uc73c\ub85c \uc815\ub9ac\ud55c \ub4a4 DataFrame() \ud568\uc218\uc5d0 \ub9ac\uc2a4\ud2b8\ub098 \ub515\uc154\ub108\ub9ac \ud615\ud0dc\ub85c \uc804\ub2ec\ud558\uc5ec \ub370\uc774\ud130\ud504\ub808\uc784\uc73c\ub85c \ubcc0\ud658\ud55c\ub2e4.  "),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python",metastring:'title="<\uc608\uc81c 2-5> \ubbf8\uad6d ETF \ub9ac\uc2a4\ud2b8 \uac00\uc838\uc624\uae30"',title:'"<\uc608\uc81c',"2-5>":!0,"\ubbf8\uad6d":!0,ETF:!0,"\ub9ac\uc2a4\ud2b8":!0,'\uac00\uc838\uc624\uae30"':!0}),"from bs4 import BeautifulSoup\nimport requests\nimport re\n\nurl = 'https://en.wikipedia.org/wiki/List_of_American_exchange-traded_funds'\nreq = requests.get(url) # \ud574\ub2f9 url\uc5d0\uc11c \uc751\ub2f5\uacb0\uacfc\ub97c \uac00\uc838\uc634\nsoup = BeautifulSoup(req.text, 'lxml')  # req.text\ub97c 'lxml' \ubc29\uc2dd\uc73c\ub85c \ud574\uc11d\nrows = soup.select('div > ul > li')\n\netfs = {}\nfor row in rows:\n    try:\n        etf_name = re.findall('^(.*) \\(NYSE', row.text)\n        etf_market = re.findall('\\((.*)\\|', row.text)\n        etf_ticker = re.findall('NYSE Arca\\|(.*)\\)', row.text)\n\n        if (len(etf_ticker) > 0) & (len(etf_market) > 0) & (len(etf_name) > 0):\n            etfs[etf_ticker[0]] = [etf_market[0], etf_name[0]]\n\n    except AttributeError as err:\n        pass\n\ndf = pd.DataFrame(etfs)\nprint(df)\n#                                   ITOT ...                                      WDTI\n# 0                            NYSE Arca ...                                 NYSE Arca   \n# 1  iShares Core S&P Total US Stock Mkt ...  WisdomTree Managed Futures Strategy Fund   \n")),Object(c.b)("h2",{id:"3-api-\ud65c\uc6a9\ud558\uc5ec-\ub370\uc774\ud130-\uc218\uc9d1\ud558\uae30"},"3. API \ud65c\uc6a9\ud558\uc5ec \ub370\uc774\ud130 \uc218\uc9d1\ud558\uae30"),Object(c.b)("p",null,"\ub300\ubd80\ubd84\uc758 API\ub294 \ud310\ub2e4\uc2a4\uc5d0\uc11c \uc27d\uac8c \uc77d\uc5b4\uc62c \uc218 \uc788\ub294 \ud30c\uc77c \ud615\uc2dd\uc744 \uc9c0\uc6d0\ud55c\ub2e4.  "),Object(c.b)("h4",{id:"\uad6c\uae00-\uc9c0\uc624\ucf54\ub529geocoding"},"\uad6c\uae00 \uc9c0\uc624\ucf54\ub529(Geocoding)"),Object(c.b)("p",null,"\uc7a5\uc18c \uc774\ub984 \ub610\ub294 \uc8fc\uc18c\ub97c \uc785\ub825\ud558\uba74 \uc704\ub3c4\uc640 \uacbd\ub3c4 \uc88c\ud45c \uc815\ubcf4\ub97c \ubcc0\ud658\ud574\uc8fc\ub294 \uc11c\ube44\uc2a4  "),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},Object(c.b)("strong",{parentName:"p"},"\uad6c\uae00 \uc9c0\uc624\ucf54\ub529 API \ubc1c\uae09 \uc808\ucc28"),Object(c.b)("br",{parentName:"p"}),"\n","\uad6c\uae00 API\uc758 \uacbd\uc6b0 \ubb34\ub8cc \uc0ac\uc6a9\ub7c9\uc744 \ucd08\uacfc\ud560 \uacbd\uc6b0 \uc694\uae08\uc744 \uc9c0\ubd88\ud574\uc57c \ud558\ubbc0\ub85c \uc8fc\uc758 "),Object(c.b)("ol",{parentName:"blockquote"},Object(c.b)("li",{parentName:"ol"},Object(c.b)("a",Object(a.a)({parentName:"li"},{href:"https://cloud.google.com/maps-platform/places/?hl=ko"}),"\uad6c\uae00 \uc9c0\ub3c4 \uc11c\ube44\uc2a4")," \uc811\uc18d"),Object(c.b)("li",{parentName:"ol"},"\uc0c8 \ud504\ub85c\uc81d\ud2b8 \ub9cc\ub4e4\uae30 (\uc2e0\uc6a9\uce74\ub4dc \uc815\ubcf4 \ub4f1\ub85d \ud544\uc218)"),Object(c.b)("li",{parentName:"ol"},"API \uc124\uc815"),Object(c.b)("li",{parentName:"ol"},"\uc0ac\uc6a9\uc790 \uc778\uc99d"),Object(c.b)("li",{parentName:"ol"},"API \ud0a4 \ubc1c\uae09  "))),Object(c.b)("p",null,"\u2757 \ucc98\uc74c \uc2e4\ud589 \uc2dc ",Object(c.b)("inlineCode",{parentName:"p"},"Anaconda Prompt"),"\uc5d0\uc11c googlemaps \ub77c\uc774\ube0c\ub7ec\ub9ac \uc124\uce58"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{}),"conda install -c conda-forge googlemaps\n")),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python",metastring:'title="<\uc608\uc81c 2-6> \uad6c\uae00 \uc9c0\uc624\ucf54\ub529 \uc704\uce58 \uc815\ubcf4"',title:'"<\uc608\uc81c',"2-6>":!0,"\uad6c\uae00":!0,"\uc9c0\uc624\ucf54\ub529":!0,"\uc704\uce58":!0,'\uc815\ubcf4"':!0}),"import googlemaps\n\nkey = 'API \ud0a4 \uc785\ub825'\nmaps = googlemaps.Client(key=key)\n\nplaces = ['\uc11c\uc6b8\uc2dc\uccad', '\uad6d\ub9bd\uad6d\uc545\uc6d0', '\ud574\uc6b4\ub300\ud574\uc218\uc695\uc7a5']\nlat = []\nlon = []\nfor i, place in enumerate(places):\n    try:\n        print(i+1, place)\n        geo_location = maps.geocode(place)[0].get('geometry')\n        lat.append(geo_location['location']['lat'])\n        lon.append(geo_location['location']['lng'])\n\n    except:\n        lan.append('')\n        lon.append('')\n        print(f'err: {i}')\n# 1 \uc11c\uc6b8\uc2dc\uccad\n# 2 \uad6d\ub9bd\uad6d\uc545\uc6d0\n# 3 \ud574\uc6b4\ub300\ud574\uc218\uc695\uc7a5\n\ndf = pd.DataFrame({'\uc704\ub3c4':lat, '\uacbd\ub3c4':lon}, index=places)\nprint(df)\n#                 \uc704\ub3c4          \uacbd\ub3c4\n# \uc11c\uc6b8\uc2dc\uccad     37.566295  126.977945\n# \uad6d\ub9bd\uad6d\uc545\uc6d0    37.477759  127.008304\n# \ud574\uc6b4\ub300\ud574\uc218\uc695\uc7a5  35.158698  129.160384\n")),Object(c.b)("h2",{id:"4-\ub370\uc774\ud130-\uc800\uc7a5\ud558\uae30"},"4. \ub370\uc774\ud130 \uc800\uc7a5\ud558\uae30"),Object(c.b)("h3",{id:"4-1-csv-\ud30c\uc77c\ub85c-\uc800\uc7a5"},"4-1. CSV \ud30c\uc77c\ub85c \uc800\uc7a5"),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"\ud83d\udcda CSV \ud30c\uc77c\ub85c \uc800\uc7a5: DataFrame\uac1d\uccb4.to_csv('\ud30c\uc77c \uc774\ub984(\uacbd\ub85c)')"),"  "),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python",metastring:'title="<\uc608\uc81c2-7> CSV \ud30c\uc77c\ub85c \uc800\uc7a5"',title:'"<\uc608\uc81c2-7>',CSV:!0,"\ud30c\uc77c\ub85c":!0,'\uc800\uc7a5"':!0}),"data = {'name':['Jerry', 'Riah', 'Paul'],\n        'algol':['A', 'A+', 'B'],\n        'basic':['C', 'B', 'B+'],\n        'c++':['B+', 'C', 'C+']}\ndf = pd.DataFrame(data)\ndf.set_index('name', inplace=True)\nprint(df)\n#       algol basic c++\n# name                 \n# Jerry     A     C  B+\n# Riah     A+     B   C\n# Paul      B    B+  C+\n\ndf.to_csv('./df_sample.csv')\n")),Object(c.b)("h3",{id:"4-2-json-\ud30c\uc77c\ub85c-\uc800\uc7a5"},"4-2. JSON \ud30c\uc77c\ub85c \uc800\uc7a5"),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"\ud83d\udcda JSON \ud30c\uc77c\ub85c \uc800\uc7a5: DataFrame\uac1d\uccb4.to_json('\ud30c\uc77c \uc774\ub984(\uacbd\ub85c)')"),"  "),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python",metastring:'title="<\uc608\uc81c2-8> JSON \ud30c\uc77c\ub85c \uc800\uc7a5"',title:'"<\uc608\uc81c2-8>',JSON:!0,"\ud30c\uc77c\ub85c":!0,'\uc800\uc7a5"':!0}),"df.to_json('./df_sample.json')\n")),Object(c.b)("h3",{id:"4-3-excel-\ud30c\uc77c\ub85c-\uc800\uc7a5"},"4-3. Excel \ud30c\uc77c\ub85c \uc800\uc7a5"),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"\ud83d\udcda Excel \ud30c\uc77c\ub85c \uc800\uc7a5: DataFrame\uac1d\uccb4.to_excel('\ud30c\uc77c \uc774\ub984(\uacbd\ub85c)')"),"  "),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python",metastring:'title="<\uc608\uc81c2-9> Excel \ud30c\uc77c\ub85c \uc800\uc7a5"',title:'"<\uc608\uc81c2-9>',Excel:!0,"\ud30c\uc77c\ub85c":!0,'\uc800\uc7a5"':!0}),"df.to_excel('./df_sample.xlsx')\n")),Object(c.b)("h3",{id:"4-4-\uc5ec\ub7ec-\uac1c\uc758-\ub370\uc774\ud130\ud504\ub808\uc784\uc744-\ud558\ub098\uc758-excel-\ud30c\uc77c\ub85c-\uc800\uc7a5"},"4-4. \uc5ec\ub7ec \uac1c\uc758 \ub370\uc774\ud130\ud504\ub808\uc784\uc744 \ud558\ub098\uc758 Excel \ud30c\uc77c\ub85c \uc800\uc7a5"),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"\ud83d\udcda \ub370\uc774\ud130\ud504\ub808\uc784 \uc5ec\ub7ec \uac1c\ub97c Excel \ud30c\uc77c\ub85c \uc800\uc7a5: pd.ExcelWriter('\ud30c\uc77c \uc774\ub984(\uacbd\ub85c)')"),"  "),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python",metastring:'title="<\uc608\uc81c2-10> JSON \ud30c\uc77c\ub85c \uc800\uc7a5"',title:'"<\uc608\uc81c2-10>',JSON:!0,"\ud30c\uc77c\ub85c":!0,'\uc800\uc7a5"':!0}),"data1 = {'name':['Jerry', 'Riah', 'Paul'],\n        'algol':['A', 'A+', 'B'],\n        'basic':['C', 'B', 'B+'],\n        'c++':['B+', 'C', 'C+']}\ndata2 = {'c0':[1, 2, 3],\n         'c1':[4, 5, 6],\n         'c2':[7, 8, 9],\n         'c3':[10, 11, 12],\n         'c4':[13, 14, 15]}\ndf1 = pd.DataFrame(data1)\ndf1.set_index('name', inplace=True)\nprint(df1)\n#       algol basic c++\n# name                 \n# Jerry     A     C  B+\n# Riah     A+     B   C\n# Paul      B    B+  C+\ndf2 = pd.DataFrame(data2)\ndf2.set_index('c0', inplace=True)\nprint(df2)\n#     c1  c2  c3  c4\n# c0                \n# 1    4   7  10  13\n# 2    5   8  11  14\n# 3    6   9  12  15\n\nwriter = pd.ExcelWriter('./df_excelwriter.xlsx')\ndf1.to_excel(writer, sheet_name='sheet1')\ndf2.to_excel(writer, sheet_name='sheet2')\nwriter.save()\n")))}d.isMDXComponent=!0}}]);